---
author: "[Patrick J. Roddy](https://paddyroddy.github.io)"
date: 2024-07-23
format: revealjs
subtitle: "[ARC Collaborations Hour](https://www.ucl.ac.uk/arc)"
title: "pyOpenSci: My Experience"
---

{{< include /_includes/qr-code.qmd >}}

# The Journal of Open Source Software (JOSS)

## JOSS

::: {layout-ncol=2}

[![](_figures/joss_logo.png)](https://joss.theoj.org)

- JOSS is a **developer friendly**, open access journal for research software
  packages.

- The recording of my talk on JOSS can be
  [accessed here](https://liveuclac.sharepoint.com/:v:/r/sites/RITSstaff/Shared%20Documents/Collaborations/Recordings/ARC%20Collaborations%20Group%20Meeting-20230606_140109-Meeting%20Recording.mp4?csf=1&web=1&e=qhKamX&nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJTdHJlYW1XZWJBcHAiLCJyZWZlcnJhbFZpZXciOiJTaGFyZURpYWxvZy1MaW5rIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXcifSwicGxheWJhY2tPcHRpb25zIjp7InN0YXJ0VGltZUluU2Vjb25kcyI6MTk4OC4wOH19).

:::

## What Exactly Do You Mean by 'Journal'

> The Journal of Open Source Software (JOSS) is an academic journal (ISSN
> 2475-9066) with a formal peer review process that is designed to improve the
> quality of the software submitted. Upon acceptance into JOSS, a Crossref DOI
> is minted and we list your paper on the JOSS website.

## Do We Not Have Enough Journals Already

> Perhaps, and in a perfect world we'd rather papers about software were not
> necessary but we recognise that for most researchers, papers and not software
> are the currency of academic research and that citations are required for a
> good career.

> We built this journal because we believe that after you have done the hard
> work of writing great software, it should not take weeks and months to write a
> paper about your work.

## You Said Developer Friendly, What Do You Mean

> We have a simple submission workflow and
> [extensive documentation](https://joss.readthedocs.io/en/latest/submitting.html)
> to help you prepare your submission. If your software is already well
> documented then paper preparation should take no more than an hour.

> You can read more about our motivations to build JOSS in our
> [announcement blog post](https://www.arfon.org/announcing-the-journal-of-open-source-software).

## My Submission

[![](https://joss.theoj.org/papers/55d9cf16a27bf2d3141f0f66c676b7f2/status.svg)](https://joss.theoj.org/papers/55d9cf16a27bf2d3141f0f66c676b7f2)

[![](_figures/joss_review.png)](https://joss.theoj.org/papers/10.21105/joss.05221)

# pyOpenSci

## pyOpenSci

::: {layout="[75,25]"}

::: {#first-column}

> We support the scientific Python tools that drive open science through peer
> review, training and community building.

> We build diverse community that supports free and open Python tools for
> processing scientific data. We also build technical skills needed to
> contribute to open source and that support open science. Join our global
> community.

:::

![](_figures/pyopensci_logo.png)

:::

## Pre-Submission Enquiry

[![](_figures/pyopensci_presubmission.png){width=90%}](https://github.com/pyOpenSci/software-submission/issues/148)

<!-- vale RedHat.TermsWarnings = NO -->

## Review Process {data-menu-title="Review Process (i)"}

<!-- vale RedHat.TermsWarnings = YES -->

{{< include /quarto-making-talks/_slides/checkboxes.qmd >}}

## Review Process {data-menu-title="Review Process (ii)"}

Documentation:

- [ ] **Function Documentation:** for all user-facing functions.
- [ ] **Examples** for all user-facing functions.
- [ ] **Community guidelines** including contribution guidelines in the README
      or CONTRIBUTING.
- [ ] **Metadata** including author(s), author email(s), a URL, and any other
      relevant metadata e.g. in a `pyproject.toml` file or elsewhere.

## Review Process {data-menu-title="Review Process (iii)"}

`README.md`:

- [ ] The package name
- [ ] Badges for:
  - [ ] Continuous integration and test coverage,
  - [ ] Docs building (if you have a documentation website),
  - [ ] A [repostatus.org](https://www.repostatus.org/) badge,
  - [ ] Python versions supported,
  - [ ] Current package version (on PyPI / Conda).

## Review Process {data-menu-title="Review Process (iv)"}

`README.md`:

- [ ] Short description of package goals.
- [ ] Package installation instructions
- [ ] Any additional setup required to use the package (authentication tokens
      and so on)

## Review Process {data-menu-title="Review Process (v)"}

`README.md`:

- [ ] Descriptive links to all vignettes. If the package is small, there might
      only be a need for one vignette which could be placed in the README.md
      file.
  - [ ] Brief demonstration of package usage (as it makes sense - links to
        vignettes could also suffice here if package description is clear)
- [ ] Link to your documentation website.

## Review Process {data-menu-title="Review Process (vi)"}

`README.md`:

- [ ] If applicable, how the package compares to other similar packages and how
      it relates to other packages in the scientific ecosystem.
- [ ] Citation information

## Review Process {data-menu-title="Review Process (vii)"}

Usability:

- [ ] Package documentation is clear and easy to find and use.
- [ ] The need for the package is clear
- [ ] All functions have documentation and associated examples for use
- [ ] The package is easy to install

## Review Process {data-menu-title="Review Process (viii)"}

Functionality:

- [ ] **Installation:** Installation succeeds as documented.
- [ ] **Functionality:** Any functional claims of the software been confirmed.
- [ ] **Performance:** Any performance claims of the software been confirmed.

## Review Process {data-menu-title="Review Process (ix)"}

Functionality:

- [ ] **Automated tests:**
  - [ ] All tests pass on the reviewer's local machine for the package version
        submitted by the author. Ideally this should be a tagged version making
        it easy for reviewers to install.
  - [ ] Tests cover essential functions of the package and a reasonable range of
        inputs and conditions.

## Review Process {data-menu-title="Review Process (x)"}

Functionality:

- [ ] **Continuous Integration:** Has continuous integration setup (We suggest
      using Github actions but any CI platform is acceptable for review)
- [ ] **Packaging guidelines**: The package conforms to the pyOpenSci
      [packaging guidelines](https://www.pyopensci.org/python-package-guide).
  - [ ] Package supports modern versions of Python and not
        [End of life versions](https://endoflife.date/python).
  - [ ] Code format is standard throughout package and follows PEP 8 guidelines
        (CI tests for linting pass)

## Package Acceptance

::: {layout-ncol=2}

[![](_figures/pyopensci_packages.png)](https://www.pyopensci.org/python-packages.html)

> If the package has an **obvious research application** according to JOSS's
> definition in their
> [submission requirements](http://joss.theoj.org/about#submission_requirements),
> then one can submit their package to JOSS through pyOpenSci.

[![](https://img.shields.io/badge/PyOpenSci-Peer%20Reviewed-success.svg)](https://github.com/pyOpenSci/software-submission/issues/149)

:::

## Blog Post (Optional)

[![](_figures/pyopensci_blog.png){width=80%}](https://www.pyopensci.org/blog/sleplet-slepian-wavelets)

# Conclusions

## {data-menu-title="Summary"}

- pyOpenSci still in its infancy (32 packages as of 2024-06-12)
- Easily integrates with JOSS
- Exposure for your package (potentially more so in the future)
- [rOpenSci](https://ropensci.org/) for Python, see
  [blog launch](https://ropensci.org/blog/2013/05/16/pyopensci)
- Always looking for
  [package reviewers](https://www.pyopensci.org/about-peer-review/index.html)

# Talk on [quarto](https://quarto.org) nextâ€¦
