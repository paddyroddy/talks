---
author: "[Patrick J. Roddy](https://paddyroddy.github.io)"
date: 2024-06-25
format: revealjs
subtitle: "[ARC Collaborations Hour](https://www.ucl.ac.uk/arc)"
title: "DevOps: An Introduction"
---

{{< include /_includes/qr-code.qmd >}}

# ARC

## Current Subgroups

{{< include _slides/flowcharts.qmd >}}

## A New Subgroup

- What skills are there currently in the group?
- Monthly HPC Hour-like meeting?
- `Area: DevOps` label in `research-software-opportunities`
- Resume (again) at TI
- What training/skills do we want as a group?
- What overlap does DevOps have with the other subgroups?
- How can we work together with ISD to share training opportunities?

## ISD Training

![](_figures/isd.png)

# DevOps

<!-- vale RedHat.TermsWarnings = NO -->

## What is DevOps? {data-menu-title="What is DevOps? (i)"}

<!-- vale RedHat.TermsWarnings = YES -->

[Wikipedia](https://en.wikipedia.org/wiki/DevOps):

> DevOps is a method in the software development and IT industry. Used as a set
> of practices and tools, DevOps integrates and automates the work of software
> development (Dev) and IT operations (Ops) as a means for improving and
> shortening the systems development life cycle. DevOps is complementary to
> agile software development; many DevOps aspects came from the agile way of
> working. Automation is an important part of DevOps. Software programmers and
> architects should use "fitness functions" to keep their software in check.

## What is DevOps? {data-menu-title="What is DevOps? (ii)"}

[Wikipedia](https://en.wikipedia.org/wiki/DevOps):

> … academics and practitioners have not developed a universal definition for
> the term "DevOps". Most often, DevOps is characterised by key principles:
> `shared ownership`, `workflow automation`, and `rapid feedback`. … "a set of
> practices intended to reduce the time between committing a change to a system
> and the change being placed into normal production, while ensuring high
> quality". … At its most successful, DevOps is a combination of specific
> practices, culture change, and tools.

## DevOps Lifecycle

![Atlassian](_figures/lifecycle.png)

## Discover

::: {layout="[70,30]"}

::: {#first-column}

[Atlassian](https://www.atlassian.com/devops):

> Building software is a team sport. In preparation for the upcoming sprint,
> teams must workshop to explore, organise, and prioritise ideas. Ideas must
> align to strategic goals and deliver customer impact. Agile can help guide
> DevOps teams.

:::

::: {.fragment .fade-left}

![Jira](_figures/jira.png){width=35%} ![Trello](_figures/trello.png){width=100%}
![Confluence](_figures/confluence.png){width=35%}

:::

:::

## Plan

::: {layout="[70,30]"}

::: {#first-column}

[Atlassian](https://www.atlassian.com/devops):

> DevOps teams should adopt agile practices to improve speed and quality. Agile
> is an iterative approach to project management and software development that
> helps teams break work into smaller pieces to deliver incremental value.

:::

::: {.fragment .fade-left}

![Azure Boards](_figures/azure_boards.png){width=35%}
![Asana](_figures/asana.png){width=100%}
![Monday.com](_figures/monday.png){width=100%}

:::

:::

## Build

::: {layout="[70,30]"}

::: {#first-column}

[Atlassian](https://www.atlassian.com/devops):

> Git is a free and open source version control system. It offers support for
> branching, merging, and rewriting repository history, which has led to many
> innovative and powerful workflows and tools for the development build process.

:::

::: {.fragment .fade-left}

![Jenkins](_figures/jenkins.png){width=35%}
![GitLab CI](_figures/gitlab_ci.png){width=35%}
![GitHub Actions](_figures/github_actions.png){width=35%}

:::

:::

## Test

::: {layout="[70,30]"}

::: {#first-column}

[Atlassian](https://www.atlassian.com/devops):

> Continuous integration (CI) allows many developers to contribute to a single
> shared repository. When code changes are merged, automated tests are run to
> ensure correctness before integration. Merging and testing code often help
> development teams gain reassurance in the quality and predictability of code
> once deployed.

:::

::: {.fragment .fade-left}

![Selenium](_figures/selenium.png){width=35%}
![JUnit](_figures/junit.png){width=35%}
![Postman](_figures/postman.png){width=35%}

:::

:::

## Deploy

::: {layout="[70,30]"}

::: {#first-column}

[Atlassian](https://www.atlassian.com/devops):

> Continuous deployment (CD) allows teams to release features often into
> production in an automated fashion. Teams also have the option to deploy with
> feature flags, delivering new code to users steadily and methodically rather
> than all at once. This approach improves velocity, productivity, and
> sustainability of software development teams.

:::

::: {.fragment .fade-left}

![Ansible](_figures/ansible.png){width=35%}
![Terraform](_figures/terraform.png){width=35%}
![Kubernetes](_figures/kubernetes.png){width=35%}

:::

:::

## Operate

::: {layout="[70,30]"}

::: {#first-column}

[Atlassian](https://www.atlassian.com/devops):

> Manage the end-to-end delivery of IT services to customers. This includes the
> practices involved in design, implementation, configuration, deployment, and
> maintenance of all IT infrastructure that supports an organisation's services.

:::

::: {.fragment .fade-left}

![Docker](_figures/docker.png){width=35%}
![Puppet](_figures/puppet.png){width=35%} ![Chef](_figures/chef.png){width=35%}

:::

:::

## Observe

::: {layout="[70,30]"}

::: {#first-column}

[Atlassian](https://www.atlassian.com/devops):

> Quickly identify and resolve issues that impact product uptime, speed, and
> functionality. Automatically inform your team of changes, high-risk actions,
> or failures, so you can keep services on.

:::

::: {.fragment .fade-left}

![Prometheus](_figures/prometheus.png){width=35%}
![Grafana](_figures/grafana.png){width=35%}
![New Relic](_figures/new_relic.png){width=35%}

:::

:::

## Continuous Feedback

::: {layout="[70,30]"}

::: {#first-column}

[Atlassian](https://www.atlassian.com/devops):

> DevOps teams should evaluate each release and generate reports to improve
> future releases. By gathering continuous feedback, teams can improve their
> processes and incorporate customer feedback to improve the next release.

:::

::: {.fragment .fade-left}

![Slack](_figures/slack.png){width=35%}
![Microsoft Teams](_figures/microsoft_teams.png){width=35%}
![PagerDuty](_figures/pager_duty.png){width=35%}

:::

:::

# Conclusions

## {data-menu-title="Summary"}

- Portmanteau of "development" and "operations"
- Many different definitions out there
- Everyone is doing some part of the DevOps lifecycle
- New subgroup = new opportunities
- Training opportunities out there
- Need to identify skill gaps/requirements
- Join the `#subgroup-devops` Slack channel
- Talk at TI

## {data-menu-title="Fin"}

![](_figures/meme.jpg)
