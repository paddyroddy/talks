---
author: "[Patrick J. Roddy](https://paddyroddy.github.io)"
date: 2025-06-03
format: revealjs
subtitle: "[ARC Collaborations Hour](https://www.ucl.ac.uk/arc)"
title: "Linting Prose with Vale"
---

{{< include /_includes/qr-code.qmd >}}

# Introduction

## Motivation

::: {layout="[30,70]"}

::: {#first-column}

![ukrse.slack.com](figures/slack.png)

:::

[![Datadog](figures/blog.png){width=80%}](https://www.datadoghq.com/blog/engineering/how-we-use-vale-to-improve-our-documentation-editing-process)

:::

## PhD Thesis

[![GitHub](figures/phd.png){width=60%}](https://github.com/paddyroddy/phd-thesis)

# Vale

## What is Vale? {data-menu-title="What is Vale? (i)"}

Vale is a command-line tool that brings code-like linting to prose. Vale is
cross-platform, written in Go, and
[available on GitHub](https://github.com/errata-ai/vale).

Vale is not a general-purpose writing aid. It does not teach you how to write;
it is a tool for writers.

Vale focuses (primarily) on the style of writing rather than its grammatical
correctnessâ€”making it fundamentally different from, for example,
[Grammarly](https://www.grammarly.com).

## What is Vale? {data-menu-title="What is Vale? (ii)"}

::: {layout="[40,60]"}

::: {#first-column}

Vale focuses on ensuring consistency across multiple authors (according to
customisable guidelines) rather than the general "correctness" of a single
author's work.

:::

![vale.sh](figures/consistency.png)

:::

## What is Vale? {data-menu-title="What is Vale? (iii)"}

::: {layout="[40,60]"}

::: {#first-column}

One of Vale's most important features is its ability to support external styles
through its extension system, which only requires some familiarity with the YAML
file format (and, optionally, regular expressions).

:::

![vale.sh](figures/customisable.png)

:::

## Example Rule

```{.yaml code-line-numbers="1-4|5-6|7-9|10-21"}
# `extends` specifies the extension point you're using. Here, we're
# using `substitution` to ensure correct usage of some technical and
# brand-specific terminology.
extends: substitution
# `message` allows you to customize the output shown to your users.
message: Use '%s' instead of '%s'.
# We're setting this rule's severity to `error`, which will cause
# CI builds to fail.
level: error
# We're using case-insensitive patterns.
ignorecase: true
swap:
  "(?:LetsEncrypt|Let's Encrypt)": Let's Encrypt
  'node[.]?js': Node.js
  'Post?gr?e(?:SQL)': PostgreSQL
  'java[ -]?scripts?': JavaScript
  linode cli: Linode CLI
  linode manager: Linode Manager
  linode: Linode
  longview: Longview
  nodebalancer: NodeBalancer
```

## Contextual Support

::: {layout-ncol=2}

::: {#first-column}

This level of understanding gives you fine-grained control over the linting
process, including the ability to limit rules to certain sections (e.g. only
headings) or ignore sections entirely (block and inline code are ignored by
default).

:::

![vale.sh](figures/markdown.png)

:::

## Tech Stack {data-menu-title="Tech Stack? (i)"}

Vale is a 100% open-source, MIT-licensed project that consists of multiple
parts:

| Name    | Tech |                                                                                    Info |
| ------- | :--- | --------------------------------------------------------------------------------------: |
| vale    | Go   |                         The main repository containing the Vale command-line interface. |
| vale-ls | Rust | An implementation of the Language Server Protocol (LSP) for the Vale command-line tool. |

## Tech Stack {data-menu-title="Tech Stack? (ii)"}

| Name        | Tech       |                                                                            Info |
| ----------- | :--------- | ------------------------------------------------------------------------------: |
| vale.sh     | Svelte     |                Website and documentation for the Vale CLI and related projects. |
| vale-action | TypeScript | The official GitHub Action for Vale -- install, manage, and run Vale with ease. |

## Tech Stack {data-menu-title="Tech Stack? (iii)"}

| Name        | Tech |                                                                                                         Info |
| ----------- | :--- | -----------------------------------------------------------------------------------------------------------: |
| packages    | YAML |                               A collection of pre-packaged, Vale-compatible style guides and configurations. |
| vale-native | Go   | A native messaging host for the Vale CLI: Use your local configurations in Chrome, Firefox, Opera, and Edge. |

# Setting Up

## `.vale.ini` {data-menu-title=".vale.ini (i)"}

```{.yaml code-line-numbers="1-2|4-7|9-12"}
# Core settings appear at the top
# (the "global" section).

[formats]
# Format associations appear under
# the optional "formats" section.

[*]
# Format-specific settings appear
# under a user-provided "glob"
# pattern.
```

Core settings:

| Name       | Type   |                         Description |
| ---------- | :----- | ----------------------------------: |
| StylesPath | string | Path to all Vale-related resources. |

## `.vale.ini` {data-menu-title=".vale.ini (ii)"}

| Name          | Type     |                               Description |
| ------------- | :------- | ----------------------------------------: |
| Packages      | string[] | List of packages to download and install. |
| Vocab         | string[] |             List of vocabularies to load. |
| MinAlertLevel | enum     |           Minimum alert level to display. |
| IgnoredScopes | enum     | List of inline-level HTML tags to ignore. |
| SkippedScopes | enum     |  List of block-level HTML tags to ignore. |

## This Repository {data-menu-title="This Repository (i)"}

The `/.vale.ini` file:

```{.ini}
{{< include ../.vale.ini >}}
```

## This Repository {data-menu-title="This Repository (ii)"}

The `/.github/styles/.gitignore` file:

```{text}
{{< include ../.github/styles/.gitignore >}}
```

Styles specified in `Packages` can be retrieved by running `vale sync`, hence
the `.gitignore` file.

One can write their own rules in `/.github/styles/custom`.

## Built-In Packages {data-menu-title="Built-In Packages (i)"}

Vale comes with a single built-in style named Vale that implements a few rules:
`Spelling`, `Terms`, `Avoid` and `Repetition`.

The following packages can be retrieved with `vale sync`:

- `alex`: An implementation of the guidelines enforced by the alex linter.
- `Google`: An implementation of the Google Developer Documentation Style Guide.
- `Joblint`: An implementation of the guidelines enforced by the Joblint linter.

## Built-In Packages {data-menu-title="Built-In Packages (ii)"}

- `Microsoft`: An implementation of the Microsoft Writing Style Guide.
- `proselint`: An implementation of the guidelines enforced by the proselint
  linter.
- `Readability`: An implementations of many popular "readability" metrics.
- `write-good`: An implementation of the guidelines enforced by the write-good
  linter.

## Custom Rules {data-menu-title="Custom Rules (i)"}

`/.github/styles/custom/british-spellings.yml`

```{.yaml}
{{< include ../.github/styles/custom/british-spellings.yml >}}
```

## Custom Rules {data-menu-title="Custom Rules (ii)"}

`/.github/styles/custom/dashes.yml`

```{.yaml}
{{< include ../.github/styles/custom/dashes.yml >}}
```

## Custom Rules {data-menu-title="Custom Rules (iii)"}

`/.github/styles/custom/endash.yml`

```{.yaml}
{{< include ../.github/styles/custom/endash.yml >}}
```

## Custom Rules {data-menu-title="Custom Rules (iv)"}

`/.github/styles/custom/no-contractions.yml`

```{.yaml}
{{< include ../.github/styles/custom/no-contractions.yml >}}
```

## Custom Rules {data-menu-title="Custom Rules (v)"}

`/.github/styles/custom/oxford-comma.yml`

```{.yaml}
{{< include ../.github/styles/custom/oxford-comma.yml >}}
```

`/.github/styles/custom/spaces.yml`

```{.yaml}
{{< include ../.github/styles/custom/spaces.yml >}}
```

## Custom Rules {data-menu-title="Custom Rules (vi)"}

`/.github/styles/custom/quotes.yml`

```{.yaml}
{{< include ../.github/styles/custom/quotes.yml >}}
```

More rules can be found at: <https://hyperlint.com/vale/rules>.
