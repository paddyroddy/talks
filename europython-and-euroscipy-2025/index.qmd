---
author: "[Patrick J. Roddy](https://paddyroddy.github.io)"
date: 2025-xx-xx
format: revealjs
subtitle: "[ARC Collaborations Hour](https://www.ucl.ac.uk/arc)"
title: EuroPython and EuroSciPy 2025
---

{{< include /_includes/qr-code.qmd >}}

# EuroPython

## Weekend Before ðŸ˜´

![UK Challenge](figures/ukchallenge.jpg)

## Flight

```{python}
from ipyleaflet import Map, Marker, basemap_to_tiles, basemaps

heathrow = (51.46815519646558, -0.45505559219641106)
prague = (50.10175285896584, 14.26320251681309)
places = {heathrow, prague}
m = Map(
    basemap=basemap_to_tiles(basemaps.OpenStreetMap.Mapnik, "2025-07-14"),
    center=(
        sum(place[0] for place in places) / len(places),
        sum(place[1] for place in places) / len(places),
    ),
    zoom=6,
)
for place in places:
    m.add_layer(Marker(location=place))
m
```

## Tutorials {{< fa brands github >}}

- GIL-free Python and the GPU: hands-on experience
- The Mighty Dot - Customize Attribute Access with Descriptors
- [Accelerating Scientific Python: JAX, Numba, and Ray in Action](https://github.com/coobas/europython-25)

<!-- vale RedHat.TermsWarnings = NO -->

## Talks â€“ Highlights {data-menu-title="Talks â€“ Highlights (i)"}

<!-- vale RedHat.TermsWarnings = YES -->

- Myths and fairy tales around Python performance
- Typing at scale: statically type-checking a large codebase
- Why it took 4 years to get a lock files specification
- Snapshot Testing: A New Era of Reliability
- End to End with Testcontainers and Playwright

## Talks â€“ Highlights {data-menu-title="Talks â€“ Highlights (ii)"}

- What comes after Rust in the Python ecosystem?
- What does = do?
  <!-- vale RedHat.Symbols = NO -->
  <!-- vale RedHat.TermsWarnings = NO -->
- Python Config That Will Give You Chills (In a Good Way, I Promise!)
  <!-- vale RedHat.TermsWarnings = YES -->
  <!-- vale RedHat.CaseSensitiveTerms = NO -->
- "Python: the Documentary" screening and Q&A
  <!-- vale RedHat.CaseSensitiveTerms = YES -->
  <!-- vale RedHat.Symbols = YES -->

## Running {{< fa brands strava >}}

```{python}
import datetime
import pathlib
import sys

sys.path.append(str(pathlib.Path.cwd().parent / "_strava"))

from heatmap import generate_map

strava_map = generate_map(
    center=(50.075476439508904, 14.429899537376473),
    zoom=12,
    start_date=datetime.datetime(2025, 7, 14, tzinfo=datetime.UTC),
    end_date=datetime.datetime(2025, 7, 21, tzinfo=datetime.UTC),
)

strava_map
```

# EuroSciPy

## Flight

```{python}
from ipyleaflet import Map, Marker, basemap_to_tiles, basemaps

heathrow = (51.46815519646558, -0.45505559219641106)
warsaw = (52.16484548195686, 20.969378870573134)
places = {heathrow, warsaw}
m = Map(
    basemap=basemap_to_tiles(basemaps.OpenStreetMap.Mapnik, "2025-08-14"),
    center=(
        sum(place[0] for place in places) / len(places),
        sum(place[1] for place in places) / len(places),
    ),
    zoom=6,
)
for place in places:
    m.add_layer(Marker(location=place))
m
```

## Train

```{python}
from ipyleaflet import Map, Marker, basemap_to_tiles, basemaps

krakow = (50.068408415434824, 19.947514258369935)
warsaw = (52.228859657588366, 21.00330218765159)
places = {krakow, warsaw}
m = Map(
    basemap=basemap_to_tiles(basemaps.OpenStreetMap.Mapnik, "2025-08-17"),
    center=(
        sum(place[0] for place in places) / len(places),
        sum(place[1] for place in places) / len(places),
    ),
    zoom=7,
)
for place in places:
    m.add_layer(Marker(location=place))
m
```

<!-- vale RedHat.TermsWarnings = NO -->

## Tutorials {{< fa brands github >}} {data-menu-title="Tutorials (i)"}

<!-- vale RedHat.TermsWarnings = YES -->

<!-- vale RedHat.Hyphens = NO -->

- Guardians of Science: A Python Tutorial on a RAG-Powered Compliance Plug-In
  <!-- vale RedHat.Hyphens = YES -->
  and Ethical AI tools
- [Skrub: machine learning for dataframes](https://github.com/skrub-data/EuroSciPy2025)
- [Use napari for easier interactive extraction of knowledge from images and other spatial data](https://github.com/brisvag/napari-tutorial-euroscipy2025)
- [Compress, Compute, and Conquer: Python-Blosc2 for Efficient Data Analysis](https://github.com/Blosc/EuroSciPy2025-CCC-Tutorial)

## Tutorials {{< fa brands github >}} {data-menu-title="Tutorials (ii)"}

- [Annotating the dynamic: Type Annotation for DataFrames](https://github.com/MDPI-AG/euroscipy2025)
- [Deploy your Machine Learning model with Fast API](https://github.com/Cheukting/ml_fastapi)
- [How to become a software detective and perform security research](https://github.com/cheshie/code-analysis)
- [Managing Scientific Data and Workflows with DataLad](https://github.com/OleBialas/DataLad-EuroScipy25)

## Talks â€“ Highlights

- A Hitchhiker's Guide to the Array API Standard Ecosystem
- Array API and library dispatching discussion
- EffVer: Versioning code by the effort required to upgrade
- Standardised Quantity/Unit APIs discussion

## Sprints {footer=false}

- [array-api-extra](https://github.com/data-apis/array-api-extra): Extra array
  functions built on top of the array API standard.
- Implemented the
  [nan_to_num](https://data-apis.org/array-api-extra/generated/array_api_extra.nan_to_num.html)
  function
  ([data-apis/array-api-extra#398](https://github.com/data-apis/array-api-extra/pull/398)).

:::{.fragment .fade-up}

```{.python}
>>> import array_api_extra as xpx
>>> import array_api_strict as xp
>>> x = xp.asarray([xp.inf, -xp.inf, xp.nan, -128, 128])
>>> xpx.nan_to_num(x)
array([ 1.79769313e+308, -1.79769313e+308,  0.00000000e+000,
       -1.28000000e+002,  1.28000000e+002])
>>> y = xp.asarray([complex(xp.inf, xp.nan), xp.nan, complex(xp.nan, xp.inf)])
array([ 1.79769313e+308, -1.79769313e+308,  0.00000000e+000,
       -1.28000000e+002,  1.28000000e+002])
>>> xpx.nan_to_num(y)
array([ 1.79769313e+308 + 0.00000000e+000j,
        0.00000000e+000 + 0.00000000e+000j,
        0.00000000e+000 + 1.79769313e+308j])
```

:::

## Running {{< fa brands strava >}}

```{python}
import datetime
import pathlib
import sys

sys.path.append(str(pathlib.Path.cwd().parent / "_strava"))

from heatmap import generate_map

strava_map = generate_map(
    center=(50.06035940320276, 19.917856293282675),
    zoom=13,
    start_date=datetime.datetime(2025, 8, 17, tzinfo=datetime.UTC),
    end_date=datetime.datetime(2025, 8, 22, tzinfo=datetime.UTC),
)

strava_map
```
